plugins {
	id "com.crystaelix.loom" version "jitpack-39f2e017"
	id "eclipse"
	id "idea"
	id "maven-publish"
	id "net.kyori.blossom" version "[1,2)"
	id "me.modmuss50.mod-publish-plugin" version "0.5.0"
}

repositories {
	mavenCentral()
	flatDir {
		dirs "libs"
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.parchmentmc.net/"
			}
		}
		filter {
			includeGroup "org.parchmentmc.data"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dvs1.progwml6.com/files/maven/"
			}
		}
		filter {
			includeGroup "slimeknights.mantle"
			includeGroup "slimeknights.tconstruct"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.blamejared.com/"
			}
		}
		filter {
			includeGroup "mezz.jei"
			includeGroup "blusunrize.immersiveengineering"
			includeGroup "com.blamejared.crafttweaker"
			includeGroup "net.darkhax.openloader"
			includeGroup "vazkii.patchouli"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.theillusivec4.top/"
			}
		}
		filter {
			includeGroup "top.theillusivec4.curios"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.architectury.dev/"
			}
		}
		filter {
			includeGroup "dev.architectury"
			includeGroup "me.shedaniel.cloth"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.saps.dev/releases/"
			}
		}
		filter {
			includeGroup "dev.ftb.mods"
			includeGroup "dev.latvian.mods"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.tterrag.com/"
			}
		}
		filter {
			includeGroup "com.tterrag.registrate"
			includeGroup "com.jozufozu.flywheel"
			includeGroup "com.simibubi.create"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
			}
		}
		filter {
			includeGroup "com.eliotlash.mclib"
			includeGroup "software.bernie.geckolib"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.covers1624.net/"
			}
		}
		filter {
			includeGroup "com.teamcofh"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://pkgs.dev.azure.com/Kotori316/minecraft/_packaging/mods/maven/v1/"
			}
		}
		filter {
			includeGroup "com.kotori316"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://jenkins.bdew.net/maven/"
			}
		}
		filter {
			includeGroup "net.bdew"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dogforce-games.com/maven/"
			}
		}
		filter {
			includeGroup "dev.gigaherz.rhinolib"
			includeGroup "dev.gigaherz.jsonthings"
			includeGroup "dev.gigaherz.graph"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
			}
		}
		filter {
			includeGroup "net.tslat.smartbrainlib"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/"
			}
		}
		filter {
			includeGroup "com.klikli_dev"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://nexus.themcbrothers.net/repository/maven-releases/"
			}
		}
		filter {
			includeGroup "net.themcbrothers"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://modmaven.dev/"
			}
		}
		filter {
			includeGroup "mekanism"
			includeGroup "dev.technici4n"
		}
	}
}

sourceSets {
	main
}

def mcVersion = "1.20.4"
def modName = "JAOPCA"
def modId = "jaopca"
def specVersion = "5"
def vendor = "thelm"

group = "thelm.jaopca"
version = "5.a.0.2"

archivesBaseName = "${modName}-${mcVersion}"

java {
	toolchain.languageVersion = JavaLanguageVersion.of(17)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

loom {
	silentMojangMappingsLicense()
	interfaceInjection.enableDependencyInterfaceInjection = false
	runs {
		configureEach {
			property "forge.logging.console.level", "debug"
		}
		client {
			vmArg "-Xmx7G"
		}
		server {
			vmArg "-Xmx3G"
		}
	}
}

dependencies {
	// Log4j
	implementation "org.apache.logging.log4j:log4j-core:2.22.1"

	// Minecraft
	minecraft "com.mojang:minecraft:1.20.4"
	mappings loom.layered {
		officialMojangMappings()
		parchment "org.parchmentmc.data:parchment-1.20.4:2024.02.25@zip"
	}
	neoForge "net.neoforged:neoforge:20.4.234"

	// Common
	implementation("mezz.jei:jei-1.20.4-neoforge:17.3.0.49") {transitive = false}
	implementation "top.theillusivec4.curios:curios-neoforge:7.3.4+1.20.4"
	implementation("software.bernie.geckolib:geckolib-neoforge-1.20.4:4.4.4") {transitive = false}
	implementation("com.klikli_dev:modonomicon-1.20.4-neoforge:1.66.2") {transitive = false}
	implementation "dev.architectury:architectury-neoforge:11.1.17"

	// CraftTweaker
	implementation("com.blamejared.crafttweaker:CraftTweaker-neoforge-1.20.4:17.0.13") {transitive = false}

	// KubeJS

	// Json Things
	implementation "dev.gigaherz.rhinolib:rhino-lib:1.0-SNAPSHOT"
	implementation("dev.gigaherz.jsonthings:JsonThings-1.20.4:0.10.0") {transitive = false}

	// Open Loader
	implementation "net.darkhax.openloader:OpenLoader-NeoForge-1.20.4:22.1.7"

	// Actually Additions
	implementation "curse.maven:actually-additions-228404:5416363"

	// Ender IO

	// Energized Power
	implementation "curse.maven:energized-power-782147:5153719"

	// Immersive Engineering
	modImplementation "blusunrize.immersiveengineering:ImmersiveEngineering:1.20.4-11.3.0-174"

	// Mekanism
	implementation "mekanism:Mekanism:1.20.4-10.5.19.40"

	// Modern Industrialization
	implementation "me.shedaniel.cloth:cloth-config-neoforge:13.0.121"
	implementation "dev.technici4n:GrandPower:1.0.0"
	implementation "curse.maven:modern-industrialization-405388:5193390"

	// Occultism
	implementation "net.tslat.smartbrainlib:SmartBrainLib-neoforge-1.20.4:1.13"
	implementation("com.klikli_dev:occultism-1.20.4-neoforge:1.124.1") {transitive = false}

	// Theurgy
	implementation("com.klikli_dev:theurgy-1.20.4-neoforge:1.17.1") {transitive = false}

	// Useful Machinery
	implementation "net.themcbrothers:themcbroslib:1.20.4-6.1.0"
	implementation("net.themcbrothers:useful-foundation:1.20.4-1.3.0") {transitive = false}
	implementation("net.themcbrothers:useful-machinery:1.20.4-1.2.0") {transitive = false}

	// Testing

	// Performance
	implementation "curse.maven:yeetusexperimentus-635427:5084420"
	implementation "curse.maven:modernfix-790626:5203337"
	implementation "curse.maven:ferritecore-429235:4954175"
}

def replacements = [
	"0@VERSION@": version
]

blossom {
	replaceToken(replacements)
}

processResources {
	inputs.properties(replacements)
	filesMatching(["mcmod.info", "META-INF/mods.toml"]) {
		filter {
			it.replace(replacements)
		}
	}
}

def manifestAttributes = [
	"Specification-Title": modName,
	"Specification-Vendor": vendor,
	"Specification-Version": specVersion,
	"Implementation-Title": archivesBaseName,
	"Implementation-Version": version,
	"Implementation-Vendor": vendor,
	"MixinConnector": "thelm.jaopca.mixins.JAOPCAMixinConnector"
]

jar {
	manifest.attributes(manifestAttributes)
}

sourcesJar {
	manifest.attributes(manifestAttributes)
}

def curseforgeDependencies = [
	"crafttweaker",
	"energized-power",
	"immersiveengineering",
	"json-things",
	"mekanism",
	"modern-industrialization",
	"occultism",
	"open-loader",
	"useful-machinery",
	"voluminous-energy"
]

def modrinthDependencies = [
	"crafttweaker",
	"energized-power",
	"immersiveengineering",
	"mekanism",
	"modern-industrialization",
	"occultism",
	"open-loader",
	"useful-machinery",
	"voluminous_energy"
]

publishMods {
	file = remapJar.archiveFile
	version = displayName = "${mcVersion}-${project.version}"
	changelog = file("changelog.md").text
	type = ALPHA
	modLoaders.add("neoforge")
	additionalFiles.from(remapSourcesJar.archiveFile)

	curseforge {
		accessToken = providers.gradleProperty("curseforge.token")
		projectId = "266936"
		minecraftVersions.add(mcVersion)
		optional curseforgeDependencies as String[]
	}

	modrinth {
		accessToken = providers.gradleProperty("modrinth.token")
		projectId = "P48mHi2j"
		minecraftVersions.add(mcVersion)
		optional modrinthDependencies as String[]
	}
}
