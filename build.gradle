plugins {
	id "com.crystaelix.loom" version "jitpack-af214fdb"
	id "eclipse"
	id "idea"
	id "maven-publish"
	id "net.kyori.blossom" version "[1,2)"
	id "me.modmuss50.mod-publish-plugin" version "0.5.0"
}

repositories {
	mavenCentral()
	flatDir {
		dirs "libs"
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.parchmentmc.net/"
			}
		}
		filter {
			includeGroup "org.parchmentmc.data"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.blamejared.com/"
			}
		}
		filter {
			includeGroup "mezz.jei"
			includeGroup "com.blamejared.crafttweaker"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.octo-studios.com/releases/"
			}
		}
		filter {
			includeGroup "top.theillusivec4.curios"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.architectury.dev/"
			}
		}
		filter {
			includeGroup "dev.architectury"
			includeGroup "me.shedaniel.cloth"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.saps.dev/releases/"
			}
		}
		filter {
			includeGroup "dev.ftb.mods"
			includeGroup "dev.latvian.mods"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/"
			}
		}
		filter {
			includeGroup "software.bernie.geckolib"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dogforce-games.com/maven/"
			}
		}
		filter {
			includeGroup "dev.gigaherz.jsonthings"
			includeGroup "dev.gigaherz.graph"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dl.cloudsmith.io/public/tslat/sbl/maven/"
			}
		}
		filter {
			includeGroup "net.tslat.smartbrainlib"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/"
			}
		}
		filter {
			includeGroup "com.klikli_dev"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://nexus.themcbrothers.net/repository/maven-releases/"
			}
		}
		filter {
			includeGroup "net.themcbrothers"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://modmaven.dev/"
			}
		}
		filter {
			includeGroup "mekanism"
			includeGroup "dev.technici4n"
			includeGroup "aztech"
		}
	}
}

sourceSets {
	main
}

def mcVersion = "1.21"
def modName = "JAOPCA"
def modId = "jaopca"
def specVersion = "5"
def vendor = "thelm"

group = "thelm.jaopca"
version = "5.0.b.1"

archivesBaseName = "${modName}-${mcVersion}"

java {
	toolchain.languageVersion = JavaLanguageVersion.of(21)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

loom {
	silentMojangMappingsLicense()
	interfaceInjection.enableDependencyInterfaceInjection = false
	runs {
		configureEach {
			property "forge.logging.console.level", "debug"
		}
		client {
			vmArg "-Xmx7G"
		}
		server {
			vmArg "-Xmx3G"
		}
	}
}

dependencies {
	// Log4j
	implementation "org.apache.logging.log4j:log4j-core:2.22.1"

	// Minecraft
	minecraft "com.mojang:minecraft:1.21"
	mappings loom.layered {
		officialMojangMappings()
		parchment "org.parchmentmc.data:parchment-1.21:2024.07.07@zip"
	}
	neoForge "net.neoforged:neoforge:21.0.116-beta"

	// Common
	implementation("mezz.jei:jei-1.21-neoforge:19.5.0.48") {transitive = false}
	implementation "top.theillusivec4.curios:curios-neoforge:9.0.5+1.21"
	implementation("software.bernie.geckolib:geckolib-neoforge-1.21:4.5.7") {transitive = false}
	implementation("com.klikli_dev:modonomicon-1.21-neoforge:1.96.1") {transitive = false}
	implementation "dev.architectury:architectury-neoforge:13.0.4"
	implementation "dev.latvian.mods:rhino:2100.2.5-build.41"

	// CraftTweaker
	implementation("com.blamejared.crafttweaker:CraftTweaker-neoforge-1.21:20.0.18") {transitive = false}

	// KubeJS
	implementation("dev.latvian.mods:kubejs-neoforge:2100.7.0-build.94") {transitive = false}

	// Json Things
	modImplementation("dev.gigaherz.jsonthings:JsonThings-1.21:0.12.1") {transitive = false}

	// Energized Power
	implementation "curse.maven:energized-power-782147:5510706"

	// Integrated Dynamics
	implementation "curse.maven:cyclops-core-232758:5550881"
	implementation "curse.maven:common-capabilities-247007:5536700"
	implementation "curse.maven:integrated-dynamics-236307:5550893"

	// Mekanism
	implementation "mekanism:Mekanism:1.21-10.6.6.53"

	// Modern Industrialization
	implementation "me.shedaniel.cloth:cloth-config-neoforge:15.0.127"
	implementation "dev.technici4n:GrandPower:3.0.0"
	implementation("aztech:Modern-Industrialization:2.2.12-beta") {transitive = false}

	// Occultism
	implementation "net.tslat.smartbrainlib:SmartBrainLib-neoforge-1.21:1.14.5"
	implementation("com.klikli_dev:occultism-1.21-neoforge:1.139.1") {transitive = false}

	// Theurgy
	implementation("com.klikli_dev:theurgy-1.21-neoforge:1.30.1") {transitive = false}

	// Testing
	implementation "curse.maven:ato-405593:5553138"

	// Performance
	implementation "curse.maven:yeetusexperimentus-635427:5444189"
	implementation "curse.maven:modernfix-790626:5527238"
	implementation "curse.maven:ferritecore-429235:5434178"
}

def replacements = [
	"0@VERSION@": version
]

blossom {
	replaceToken(replacements)
}

processResources {
	inputs.properties(replacements)
	filesMatching(["mcmod.info", "META-INF/mods.toml", "META-INF/neoforge.mods.toml"]) {
		filter {
			it.replace(replacements)
		}
	}
}

def manifestAttributes = [
	"Specification-Title": modName,
	"Specification-Vendor": vendor,
	"Specification-Version": specVersion,
	"Implementation-Title": archivesBaseName,
	"Implementation-Version": version,
	"Implementation-Vendor": vendor,
	"MixinConnector": "thelm.jaopca.mixins.JAOPCAMixinConnector"
]

jar {
	manifest.attributes(manifestAttributes)
}

sourcesJar {
	manifest.attributes(manifestAttributes)
}

def curseforgeDependencies = [
	"crafttweaker",
	"energized-power",
	"integrated-dynamics",
	"json-things",
	"kubejs",
	"mekanism",
	"modern-industrialization",
	"occultism",
	"theurgy",
	"useful-machinery"
]

def modrinthDependencies = [
	"crafttweaker",
	"energized-power",
	"integrated-dynamics",
	"kubejs",
	"mekanism",
	"modern-industrialization",
	"occultism",
	"theurgy",
	"useful-machinery"
]

publishMods {
	file = remapJar.archiveFile
	version = displayName = "${mcVersion}-${project.version}"
	changelog = file("changelog.md").text
	type = ALPHA
	modLoaders.add("neoforge")
	additionalFiles.from(remapSourcesJar.archiveFile)

	curseforge {
		accessToken = providers.gradleProperty("curseforge.token")
		projectId = "266936"
		minecraftVersions.add(mcVersion)
		optional curseforgeDependencies as String[]
	}

	modrinth {
		accessToken = providers.gradleProperty("modrinth.token")
		projectId = "P48mHi2j"
		minecraftVersions.add(mcVersion)
		optional modrinthDependencies as String[]
	}
}
