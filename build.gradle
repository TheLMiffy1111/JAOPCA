plugins {
	id "com.crystaelix.loom" version "jitpack-afd363f1"
	id "eclipse"
	id "idea"
	id "maven-publish"
	id "net.kyori.blossom" version "[1,2)"
	id "com.github.johnrengelman.shadow" version "[8,9)"
	id "me.modmuss50.mod-publish-plugin" version "0.5.0"
}

repositories {
	mavenCentral()
	flatDir {
		dirs "libs"
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://nexus.gtnewhorizons.com/repository/public/"
				metadataSources {
					mavenPom()
					ignoreGradleMetadataRedirection()
				}
			}
		}
		filter {
			includeGroup "com.github.GTNewHorizons"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.tterrag.com/"
			}
		}
		filter {
			includeGroup "com.enderio"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.k-4u.nl/"
			}
		}
		filter {
			includeGroup "k4unl"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://dvs1.progwml6.com/files/maven/"
			}
		}
		filter {
			includeGroup "mantle"
			includeGroup "tconstruct"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.modmuss50.me/"
			}
		}
		filter {
			includeGroup "RebornCore"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://maven.covers1624.net/"
			}
		}
		filter {
			includeGroup "codechicken"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://gregtech.overminddl1.com/"
			}
		}
		filter {
			includeGroup "Reika"
		}
	}
	exclusiveContent {
		forRepository {
			ivy {
				artifactPattern "https://asie.pl/files/mods/[orgPath]/[module]-[revision](-[classifier]).[ext]"
				metadataSources {
					artifact()
				}
			}
		}
		filter {
			includeGroup "Factorization"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://jitpack.io/"
			}
		}
		filter {
			includeGroup "com.github.LegacyModdingMC.UniMixins"
		}
	}
	exclusiveContent {
		forRepository {
			maven {
				url = "https://cursemaven.com/"
			}
		}
		filter {
			includeGroup "curse.maven"
		}
	}
}

sourceSets {
	main
}

def mcVersion = "1.7.10"
def modName = "JAOPCA"
def modId = "jaopca"
def specVersion = "W"
def vendor = "thelm"

group = "thelm.jaopca"
version = "W.0.4.13"

archivesBaseName = "${modName}-${mcVersion}"

java {
	toolchain.languageVersion = JavaLanguageVersion.of(8)
	withSourcesJar()
}

tasks.withType(JavaCompile).configureEach {
	options.encoding = "UTF-8"
}

loom {
	silentMojangMappingsLicense()
	forge {
		mixinConfig "${modId}.mixins.rotarycraft.json"
	}
	mixin.defaultRefmapName = "${modId}.refmap.json"
	interfaceInjection.enableDependencyInterfaceInjection = false
	runs {
		configureEach {
			property "fabric.log.level", "debug"
			vmArg "-DragonAPI_disable_ASM_MOBTARGETEVENTAIPRE"
		}
		client {
			programArg "--username=Dev"
			vmArg "-Xmx7G"
		}
		server {
			vmArg "-Xmx3G"
		}
	}
	generatedIntermediateMappings()
}

configurations {
	shadowImplementation
	implementation.extendsFrom(shadowImplementation)
}

dependencies {
	// Log4j
	implementation "org.apache.logging.log4j:log4j-core:2.22.1"

	// Minecraft
	minecraft "com.mojang:minecraft:1.7.10"
	mappings "net.minecraftforge:forge:1.7.10-10.13.4.1614-1.7.10:userdev"
	legacyForge "net.minecraftforge:forge:1.7.10-10.13.4.1614-1.7.10:universal"

	// Shadow
	shadowImplementation "com.electronwill.night-config:core:3.6.4"
	shadowImplementation "com.electronwill.night-config:toml:3.6.4"

	// Mixin
	implementation("com.github.LegacyModdingMC.UniMixins:unimixins-all-1.7.10:0.1.16") {transitive = false}
	annotationProcessor("com.github.LegacyModdingMC.UniMixins:unimixins-all-1.7.10:0.1.16") {transitive = false}

	// Common
	modImplementation("com.github.GTNewHorizons:CodeChickenLib:1.2.1") {transitive = false}
	modImplementation("com.github.GTNewHorizons:CodeChickenCore:1.2.1") {transitive = false}
	modImplementation("com.github.GTNewHorizons:NotEnoughItems:2.5.17-GTNH") {transitive = false}
	modImplementation "curse.maven:nei-integration-225251:2282522"
	modImplementation "curse.maven:baubles-227083:2224857"

	// CraftTweaker
	modImplementation "curse.maven:crafttweaker-239197:2838720"

	// AbyssalCraft
	modImplementation "curse.maven:abyssalcraft-53686:2311135"

	// Applied Energistics 2
	modImplementation "curse.maven:applied-energistics-2-223794:2296430"

	// BuildCraft Additions
	modImplementation "com.github.GTNewHorizons:BuildCraft:7.1.25"
	modImplementation "curse.maven:eureka-222995:2235481"
	modImplementation "curse.maven:buildcraft-additions-221014:2272835"

	// Electrical Age
	modImplementation "curse.maven:electrical-age-253045:2937618"

	// Ender IO
	modImplementation "curse.maven:endercore-231868:4671288"
	modImplementation "curse.maven:ender-io-64578:4671445"

	// IndustrialCraft 2
	modImplementation "curse.maven:industrial-craft-242638:2353971"

	// Railcraft
	modImplementation "curse.maven:railcraft-51195:2458987"

	// Engineer's Toolbox
	modImplementation "curse.maven:engineers-toolbox-224613:2248029"

	// EssentialCraft
	modImplementation("com.github.GTNewHorizons:DummyCore:2.0.3") {transitive = false}
	modImplementation "curse.maven:essentialcraft-4-unofficial-254817:2394702"

	// Factorization
	modImplementation "Factorization:Factorization:1.7.10-0.8.109"

	// Flaxbeard's Steam Power
	modImplementation "curse.maven:flaxbeards-steam-power-224867:2301651"

	// Foundry
	modImplementation "curse.maven:foundry-228297:2269019"

	// Gany's Nether
	modImplementation "curse.maven:ganys-nether-222302:2274606"

	// HBM's Nuclear Tech Mod
	modImplementation "curse.maven:hbms-nuclear-tech-mod-235439:5066852"

	// Hydaulicraft
	modImplementation "k4unl:k4lib:1.7.10-0.1.75:universal"
	modImplementation("k4unl:HydCraft:1.7.10-2.1.253:universal") {transitive = false}

	// Magneticraft
	modImplementation "curse.maven:magneticraft-224808:2276268"

	// Mariculture
	modImplementation "curse.maven:enchiridion-76612:2242855"
	modImplementation "curse.maven:mariculture-68023:2323944"

	// Mekanism
	modImplementation "codechicken:ForgeMultipart:1.7.10-1.2.0.345:universal"
	modImplementation "curse.maven:mekanism-268560:2475797"

	// Random Additions
	modImplementation "curse.maven:creativecore-257814:2462369"
	modImplementation "com.creativemd:RandomAdditions:0.11.23"

	// RotaryCraft
	modImplementation "curse.maven:projecte-226410:2340786"
	modImplementation "curse.maven:dragonapi-235591:4722480"
	modImplementation "curse.maven:blood-magic-224791:2264826"
	modImplementation "curse.maven:rotarycraft-235596:4721191"

	// Tinkers' Construct
	modImplementation "mantle:Mantle:1.7.10-0.3.2.jenkins193"
	modImplementation("tconstruct:TConstruct:1.7.10-1.8.8.build991") {transitive = false}

	// TechReborn
	modImplementation "RebornCore:RebornCore:1.1.0.15:universal"
	modImplementation "curse.maven:techreborn-233564:2605735"

	// Thaumcraft
	modImplementation "curse.maven:thaumcraft-223628:2227552"
	modImplementation "curse.maven:thaumcraft-nei-plugin-225095:2241913"
	modImplementation("com.github.GTNewHorizons:TCNEIAdditions:1.3.2") {transitive = false}

	// Performance
	modImplementation "com.github.GTNewHorizons:GTNHLib:0.2.3"
	modImplementation("com.github.GTNewHorizons:NotEnoughIds:2.0.1") {transitive = false}
	modImplementation "curse.maven:archaicfix-677782:5094856"
}

def replacements = [
	"0@VERSION@": version
]

blossom {
	replaceToken(replacements)
}

processResources {
	inputs.properties(replacements)
	filesMatching(["mcmod.info", "META-INF/mods.toml"]) {
		filter {
			it.replace(replacements)
		}
	}
}

def manifestAttributes = [
	"Specification-Title": modName,
	"Specification-Vendor": vendor,
	"Specification-Version": specVersion,
	"Implementation-Title": archivesBaseName,
	"Implementation-Version": version,
	"Implementation-Vendor": vendor
]

jar {
	archiveClassifier = "slim-dev"
	manifest.attributes(manifestAttributes)
}

shadowJar {
	archiveClassifier = "dev"
	destinationDirectory = layout.buildDirectory.dir("devlibs")
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	configurations = [project.configurations.shadowImplementation]
	enableRelocation true
	relocationPrefix "thelm"
}

remapJar {
	dependsOn shadowJar
	inputFile = shadowJar.archiveFile
}

sourcesJar {
	manifest.attributes(manifestAttributes)
}

publishMods {
	file = remapJar.archiveFile
	version = displayName = "${mcVersion}-${project.version}"
	changelog = file("changelog.md").text
	type = ALPHA
	modLoaders.add("forge")
	additionalFiles.from(remapSourcesJar.archiveFile)

	curseforge {
		accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
		projectId = "266936"
		minecraftVersions.add(mcVersion)
		javaVersions.add(JavaVersion.VERSION_1_8)
		requires "unimixins"
	}

	modrinth {
		accessToken = providers.environmentVariable("MODRINTH_TOKEN")
		projectId = "P48mHi2j"
		minecraftVersions.add(mcVersion)
		requires "unimixins"
	}
}
